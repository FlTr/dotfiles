#!/usr/bin/env ruby

require 'irb/completion'
require 'irb/ext/save-history'
require 'pp'

IRB.conf[:SAVE_HISTORY] = 1000
IRB.conf[:HISTORY_FILE] = "#{ENV['HOME']}/.irb-history"

begin
  _prompt_prefix = "#{`rbenv version-name`.strip}:"
rescue Errno::ENOENT
  _prompt_prefix = ''
end

IRB.conf[:PROMPT][:MYPROMPT] = {
  :PROMPT_I => "#{_prompt_prefix}> ",
  :PROMPT_S => "#{_prompt_prefix}%l> ",
  :PROMPT_C => "#{_prompt_prefix}> ",
  :PROMPT_N => "#{_prompt_prefix}?> ",
  :RETURN => "=> %s\n",
  :AUTO_INDENT => true
}
IRB.conf[:PROMPT_MODE] = :MYPROMPT


class Object
  # list methods which aren't in superclass
  def local_methods(obj = self)
    (obj.methods - obj.class.superclass.instance_methods).sort
  end

  # print documentation
  #
  #   ri 'Array#pop'
  #   Array.ri
  #   Array.ri :pop
  #   arr.ri :pop
  def ri(method = nil)
    unless method && method =~ /^[A-Z]/ # if class isn't specified
      klass = self.kind_of?(Class) ? name : self.class.name
      method = [klass, method].compact.join('#')
    end
    puts `ri '#{method}'`
  end
end
