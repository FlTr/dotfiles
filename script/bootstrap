#!/usr/bin/env bash
#
# bootstrap installs things.

cd "$(dirname "$0")/.."
DOTFILES_ROOT="`pwd`"

set -e

echo ''

info () {
  printf "  [ \033[00;34m .. \033[0m ] $1"
}

user () {
  printf "\r  [ \033[0;33m ?  \033[0m ] $1 "
}

success () {
  printf "\r\033[2K  [ \033[00;32m OK \033[0m ] $1\n"
}

skip () {
  printf "\r\033[2K  [ \033[00;33mSKIP\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

setup_gitconfig () {
  if ! [ -f git/gitconfig.symlink ]
  then
    info 'setup gitconfig'

    user ' - What is your github author name?'
    read -e git_authorname
    user ' - What is your github author email?'
    read -e git_authoremail

    git_authorname=${git_authorname/\//\\\/}
    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" git/gitconfig.symlink.example > git/gitconfig.symlink

    success 'gitconfig'
  fi
}

link_file () {
  if [ ! -z "$MSYSTEM" ]
  then
    tgt=`cygpath -w $1`
    lnk=`cygpath -w $2`
    if [ -d "$1" ]
    then
      cmd /c "mklink /D $lnk $tgt" > /dev/null
    else
      cmd /c "mklink $lnk $tgt" > /dev/null
    fi
  else
    ln -s $1 $2
  fi
  success "linked $1 to $2"
}

install_dotfiles () {
  info 'installing dotfiles'

  overwrite_all=false
  backup_all=false
  skip_all=false

  for source in `find $DOT -maxdepth 2 -name \*.symlink -o -name \*.cfglink`
  do
    if [[ "$source" == *".symlink" ]]
    then
      dest="$HOME/.`basename \"${source%.*}\"`"
    else
      dest="$HOME/.config/`basename \"${source%.*}\"`"
    fi

    if [ -f $dest ] || [ -d $dest ]
    then

      overwrite=false
      backup=false
      skip=false

      if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
      then
        user "File already exists: `basename $source`, what do you want to do?\n  - [s]kip\n  - [S]kip all\n  - [o]verwrite\n  - [O]verwrite all\n  - [b]ackup\n  - [B]ackup all\n"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac
      fi

      if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]
      then
        rm -rf $dest
        success "removed $dest"
      fi

      if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]
      then
        mv $dest $dest\.backup
        success "moved $dest to $dest.backup"
      fi

      if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]
      then
        link_file $source $dest
      else
        skip "$source"
      fi

    else
      link_file $source $dest
    fi

  done
}

check_permissions () {
  # 'net file' needs administrator permissions.
  admin=false
  net file > /dev/null 2>&1 && admin=true
  if [ "$admin" == "false" ]
  then
    fail "Administrator permissions required."
  fi
}

# If we are on windows, we need administrator permissions for symlinking.
if [ ! -z "$MSYSTEM" ]
then
  check_permissions
fi

setup_gitconfig
install_dotfiles

echo ''
echo '  All installed!'